#include<iostream>
#include<typeinfo>

using namespace std;

///先定义函数
int printf()
{
    cout<<"this is P"<<endl;
    return 0;
}
//////

///111111111111111111111111111111111111111111111111111111
//以指针作为结构体成员
struct person_pointer{
    int age;
    int(*p)();
};
///111111111111111111111111111111111111111111111111111111

///222222222222222222222222222222222222222222222222222222
///在struct内定义成员函数
struct person_struct{
    int age;
    void printperson(int a, int b){
        cout<<"a:"<<a<<" "<<"b:"<<b<<endl;
    }
};
///222222222222222222222222222222222222222222222222222222


int main()
{
    ///1111111111111111111111111111111111

    person_pointer p1;        ///创建结构体
    p1.age = 20;            ///赋值给age
    p1.p = printf;          ///
    ///函数首地址为 函数名  不带括号
    /// 函数指针定义方式为： 函数返回值类型 （*p）(参数类型，参数类型，···)
    /// 如：int(*p)(int,int)
    p1.p();  //调用函数
    ////1111111111111111111111111111111111

    ///22222222222222222222222222222222222
    person_struct p2;
    p2.age = 20;
    p2.printperson(10,20);
    ///222222222222222222222222222222222222
}
